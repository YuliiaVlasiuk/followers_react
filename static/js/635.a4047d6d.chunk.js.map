{"version":3,"file":"static/js/635.a4047d6d.chunk.js","mappings":"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","sources":["pages/Tweets.styled.js","components/TweetCard/TweetsCard.styled.js","components/TweetCard/TweetCard.js","pages/Tweets.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LoadMore = styled.button`\n  width: 300px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  margin-left: 480px;\n  margin-bottom: 50px;\n`;\n\nexport const Card = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const BackBtn = styled(NavLink)`\n  width: 300px;\n  color: white;\n  text-decoration: none;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  color: white;\n  background-color: orangered;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  margin-left: 480px;\n  margin-bottom: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const Logos = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const UserLi = styled.li`\n  position: relative;\n  list-style-type: none;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  border-radius: 20px;\n\n  &:hover {\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const Picture = styled.img`\n  padding: 28px 36px 18px 36px;\n`;\n\nexport const Line = styled.div`\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 178px;\n  left: 150px;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: 8px solid #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n`;\n\nexport const Tweets = styled.p`\n  text-align: center;\n  padding-top: 62px;\n  margin: 0;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nexport const FollowersContainer = styled.p`\n  text-align: center;\n  padding-top: 16px;\n  margin: 0;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\nexport const BtnContainer = styled.div`\n  margin: 0 92px 0 92px;\n  padding-top: 26px;\n`;\n\nexport const BtnFalse = styled.button`\n  width: 100%;\n  padding: 14px 28px 14px 28px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n`;\n\nexport const BtnTrue = styled.button`\n  width: 100%;\n  padding: 14px 28px 14px 28px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  background: #5cd3a8;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  UserLi,\n  Logos,\n  Picture,\n  Line,\n  Avatar,\n  Tweets,\n  FollowersContainer,\n  BtnTrue,\n  BtnContainer,\n  BtnFalse,\n} from './TweetsCard.styled';\nimport { useState } from 'react';\n\n\nimport picture from '../../images/picture.png';\nimport logo from '../../images/logo.png';\n\nexport const TweetCard = ({ tweet }) => {\n  const getStatusOfFollower = id => {\n    const arrayofFollowers = JSON.parse(localStorage.getItem('followers'));\n    if (arrayofFollowers && arrayofFollowers.includes(id)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const getFollowers = (followers, status) => {\n    if (status) {\n      return followers + 1;\n    } else return followers;\n  };\n\n  const [status, setStatus] = useState(getStatusOfFollower(tweet.id));\n\n  const [followers, setFollowers] = useState(\n    getFollowers(tweet.followers, status)\n  );\n\n  const handleChange = () => {\n    if (status) {\n      setFollowers(prevstate => prevstate - 1);\n    } else {\n      setFollowers(prevstate => prevstate + 1);\n    }\n\n    const arrayofFollowers =\n      JSON.parse(localStorage.getItem('followers')) || [];\n\n    if (arrayofFollowers.includes(tweet.id)) {\n      const newArrayofFollowers = arrayofFollowers.filter(\n        item => item !== tweet.id\n      );\n      localStorage.setItem(`followers`, JSON.stringify(newArrayofFollowers));\n    } else\n      localStorage.setItem(\n        `followers`,\n        JSON.stringify([...arrayofFollowers, tweet.id])\n      );\n\n    setStatus(!status);\n  };\n  return (\n    <UserLi>\n      <Logos src={logo} alt=\"logo\" />\n      <Picture src={picture} alt=\"picture_question\" />\n      <Line />\n      <Avatar src={tweet.avatar} alt=\"avatar\" />\n      <Tweets>{tweet.tweets} tweets</Tweets>\n      <FollowersContainer>\n        {followers.toLocaleString('en-US', { maximumFractionDigits: 0 })}{' '}\n        Followers\n      </FollowersContainer>\n\n      <BtnContainer>\n        {!status && (\n          <BtnFalse type=\"button\" onClick={handleChange}>\n            follow\n          </BtnFalse>\n        )}\n\n        {status && (\n          <BtnTrue type=\"button\" onClick={handleChange}>\n            following\n          </BtnTrue>\n        )}\n      </BtnContainer>\n    </UserLi>\n  );\n};\n\nTweetCard.propTypes = {\n  id: PropTypes.string,\n  user: PropTypes.string,\n  avatar: PropTypes.string,\n  tweets: PropTypes.number,\n  followers: PropTypes.number,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport { LoadMore, Card, BackBtn } from './Tweets.styled';\nimport { TweetCard } from 'components/TweetCard/TweetCard';\n\n\nexport const Tweets = () => {\n  const [tweets, setTweets] = useState([]);\n  const [buttonVisial, setButtonVisial] = useState(false);\n  const [limit, setLimit] = useState(3);\n\n  const location = useLocation();\n  const backToHome = location.state?.from ?? '/';\n\n  async function getTweets(limit) {\n    try {\n      const response = await axios.get(\n        ` https://6446ed517bb84f5a3e3532bf.mockapi.io/tweets?page=1&limit=${limit}`\n      );\n\n      setTweets(response.data);\n      setButtonVisial(true);\n      if (limit > 10) {\n        setButtonVisial(false);\n      }\n    } catch (error) {}\n  }\n\n  const handleLoadMore = () => {\n    setLimit(prevpage => prevpage + 3);\n  };\n\n  useEffect(() => {\n    getTweets(limit);\n  }, [limit]);\n\n  return (\n    <main>\n      <BackBtn to={backToHome}>Back to home</BackBtn>\n\n      <Card>\n        {tweets.map(tweet => (\n          <TweetCard key={tweet.id} tweet={tweet} />\n        ))}\n      </Card>\n\n      {buttonVisial && tweets.length > 0 && (\n        <LoadMore width=\"300px\" onClick={handleLoadMore}>\n          Load more\n        </LoadMore>\n      )}\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["LoadMore","styled","Card","BackBtn","NavLink","Logos","UserLi","Picture","Line","Avatar","Tweets","FollowersContainer","BtnContainer","BtnFalse","BtnTrue","TweetCard","tweet","useState","id","arrayofFollowers","JSON","parse","localStorage","getItem","includes","getStatusOfFollower","status","setStatus","followers","getFollowers","setFollowers","handleChange","prevstate","newArrayofFollowers","filter","item","setItem","stringify","src","logo","alt","picture","avatar","tweets","toLocaleString","maximumFractionDigits","type","onClick","setTweets","buttonVisial","setButtonVisial","limit","setLimit","backToHome","useLocation","state","from","axios","response","data","useEffect","getTweets","to","map","length","width","prevpage"],"sourceRoot":""}