{"version":3,"file":"static/js/117.c7ea6ecd.chunk.js","mappings":"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","sources":["components/Tweets.styled.js","pages/Tweets.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Logos = styled.img`\nposition:absolute;\ntop: 20px;\nleft: 20px;\n`\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  margin-bottom: 0;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\nexport const UserLi = styled.li`\nposition:relative;\nlist-style-type: none;\nwidth: 380px;\nheight: 460px;\nbackground: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\nborder-radius:20px;\n\n  &:hover {\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n  \n`;\n\nexport const Picture = styled.img`\npadding: 28px 36px 18px 36px;\n`;\n\nexport const Line = styled.div`\nheight: 8px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #AE7BE3, inset 0px 3.43693px 2.5777px #FBF8FF;\n`\nexport const Avatar = styled.img`\nposition: absolute;\ntop:178px;\nleft: 150px;\nwidth: 80px;\nheight: 80px;\nborder-radius: 50%;\nborder: 8px solid #EBD8FF;\nbox-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06), inset 0px -2.19582px 4.39163px #AE7BE3, inset 0px 4.39163px 3.29372px #FBF8FF;\n`;\n\nexport const Tweets = styled.p`\ntext-align:center;\npadding-top: 62px;\nmargin: 0;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\ncolor: #EBD8FF;\n`;\n\nexport const Followers = styled.p`\ntext-align:center;\npadding-top: 16px;\nmargin: 0;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\ncolor: #EBD8FF;\n`\n\nexport const Card=styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\n`\n\nexport const BtnContainer = styled.div`\nmargin: 0 92px 0 92px;\npadding-top: 26px;\n`;\n\nexport const BtnFalse = styled.button`\nwidth: 100%;\npadding: 14px 28px 14px 28px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\ncolor: #373737;\n`;\n\nexport const BtnTrue = styled.button`\nwidth: 100%;\npadding: 14px 28px 14px 28px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\nbackground: #5CD3A8;\n`;\n\nexport const LoadMore = styled.button`\nwidth: 300px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\ncolor: #373737;\n\ntext-align: center;\ndisplay: flex;\njustify-content: center;\nmargin-left: 480px;\nmargin-bottom:50px; \n`;","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport picture from '../images/picture.png';\nimport logo from '../images/logo.png';\n\nimport {\n  LoadMore,\n  UserLi,\n  Logos,\n  Card,\n  Picture,\n  Line,\n  Avatar,\n  Tweets,\n  Followers,\n  BtnTrue,\n  BtnContainer,\n  BtnFalse,\n} from 'components/Tweets.styled';\n\nimport axios from 'axios';\n\nexport const Users = () => {\n  const [tweets, setTweets] = useState([]);\n  const [buttonVisial, setButtonVisial] = useState(false);\n  const [limit, setLimit] = useState(3);\n\n  const [following, setFollowing] = useState({});\n\n  async function getTweets(limit) {\n    try {\n      const response = await axios.get(\n        ` https://6446ed517bb84f5a3e3532bf.mockapi.io/tweets?page=1&limit=${limit}`\n      );\n\n      setTweets(response.data);\n      setButtonVisial(true);\n      if (limit > 10) {\n        setButtonVisial(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleChange = async (id, status) => {\n    \n    console.log(following)\n    setFollowing(prevState => {\n      const newState = { ...prevState };\n\n      if (status) {\n        delete newState[id];\n      } else {\n        newState[id] = true;\n      }\n\n      return newState;\n    });\n\n    setTweets(prevState => {\n      return prevState.map(tweet => {\n        if (tweet.id === id) {\n          const updateFollowers = status\n            ? tweet.followers - 1\n            : tweet.followers + 1;\n\n          axios\n            .put(`tweets/${id}`, { followers: updateFollowers })\n            .then(response => {\n              console.log(response.data);\n            })\n            .catch(error => {\n              console.error(error);\n            });\n          return {\n            ...tweet,\n            followers: updateFollowers,\n          };\n        }\n\n        return tweet;\n      });\n    });\n  };\n\n  const handleLoadMore = () => {\n    setLimit(prevpage => prevpage + 3);\n  };\n\n  useEffect(() => {\n    getTweets(limit);\n  }, [limit]);\n\n  return (\n    <main>\n      <Card>\n        {tweets.map(tweet => {\n          const status = following[tweet.id];\n\n          return (\n            <UserLi key={nanoid()}>\n              <Logos src={logo} alt=\"logo\" />\n              <Picture src={picture} alt=\"picture_question\" />\n              <Line />\n              <Avatar src={tweet.avatar} alt=\"avatar\" />\n              <Tweets>{tweet.tweets} tweets</Tweets>\n              <Followers>\n                {tweet.followers.toLocaleString('en-US')} Followers\n              </Followers>\n              <BtnContainer>\n                {!status && (\n                  <BtnFalse\n                    type=\"button\"\n                    onClick={() => handleChange(tweet.id, status)}\n                  >\n                    follow\n                  </BtnFalse>\n                )}\n\n                {status && (\n                  <BtnTrue\n                    type=\"button\"\n                    onClick={() => handleChange(tweet.id, status)}\n                  >\n                    following\n                  </BtnTrue>\n                )}\n              </BtnContainer>\n            </UserLi>\n          );\n        })}\n      </Card>\n\n      {buttonVisial && tweets.length > 0 && (\n        <LoadMore width=\"300px\" onClick={handleLoadMore}>\n          Load more\n        </LoadMore>\n      )}\n    </main>\n  );\n};\n\nexport default Users;\n"],"names":["Logos","styled","UserLi","Link","Picture","Line","Avatar","Tweets","Followers","Card","BtnContainer","BtnFalse","BtnTrue","LoadMore","Users","useState","tweets","setTweets","buttonVisial","setButtonVisial","limit","setLimit","following","setFollowing","axios","response","data","console","log","handleChange","id","status","prevState","newState","map","tweet","updateFollowers","followers","then","catch","error","useEffect","getTweets","src","logo","alt","picture","avatar","toLocaleString","type","onClick","nanoid","length","width","prevpage"],"sourceRoot":""}