{"version":3,"file":"static/js/350.f1e82733.chunk.js","mappings":"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","sources":["components/Tweets.styled.js","components/TweetCard.js","pages/Tweets.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\n\nexport const Logos = styled.img`\nposition:absolute;\ntop: 20px;\nleft: 20px;\n`\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  margin-bottom: 0;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\nexport const UserLi = styled.li`\nposition:relative;\nlist-style-type: none;\nwidth: 380px;\nheight: 460px;\nbackground: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\nborder-radius:20px;\n\n  &:hover {\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n  \n`;\n\nexport const Picture = styled.img`\npadding: 28px 36px 18px 36px;\n`;\n\nexport const Line = styled.div`\nheight: 8px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #AE7BE3, inset 0px 3.43693px 2.5777px #FBF8FF;\n`\nexport const Avatar = styled.img`\nposition: absolute;\ntop:178px;\nleft: 150px;\nwidth: 80px;\nheight: 80px;\nborder-radius: 50%;\nborder: 8px solid #EBD8FF;\nbox-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06), inset 0px -2.19582px 4.39163px #AE7BE3, inset 0px 4.39163px 3.29372px #FBF8FF;\n`;\n\nexport const Tweets = styled.p`\ntext-align:center;\npadding-top: 62px;\nmargin: 0;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\ncolor: #EBD8FF;\n`;\n\nexport const FollowersContainer = styled.p`\ntext-align:center;\npadding-top: 16px;\nmargin: 0;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\ncolor: #EBD8FF;\n`\n\nexport const Card=styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\n`\n\nexport const BtnContainer = styled.div`\nmargin: 0 92px 0 92px;\npadding-top: 26px;\n`;\n\nexport const BtnFalse = styled.button`\nwidth: 100%;\npadding: 14px 28px 14px 28px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\ncolor: #373737;\n`;\n\nexport const BtnTrue = styled.button`\nwidth: 100%;\npadding: 14px 28px 14px 28px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\nbackground: #5CD3A8;\n`;\n\nexport const LoadMore = styled.button`\nwidth: 300px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\ncolor: #373737;\n\ntext-align: center;\ndisplay: flex;\njustify-content: center;\nmargin-left: 480px;\nmargin-bottom:50px; \n`;\n\nexport const BackBtn = styled(NavLink)`\nwidth: 300px;\ncolor: white;\ntext-decoration: none;\n\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\ncolor: #373737;\ncolor: white;\nbackground-color: orangered;\ntext-align: center;\ndisplay: flex;\njustify-content: center;\nmargin-left: 480px;\nmargin-bottom:50px; \n`;\n","import {\n  UserLi,\n  Logos,\n  Picture,\n  Line,\n  Avatar,\n  Tweets,\n  FollowersContainer,\n  BtnTrue,\n  BtnContainer,\n  BtnFalse,\n} from './Tweets.styled';\nimport { useState } from 'react';\n\nimport picture from '../images/picture.png';\nimport logo from '../images/logo.png';\n\n\n\nexport const TweetCard = ({ tweet }) => {\n\n    const getInitialValue = id => {\n        const arrayOfActiveFallowers = JSON.parse(localStorage.getItem('followers')) ;\n      \n        if (arrayOfActiveFallowers && arrayOfActiveFallowers.includes(id)) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n\n\n  const [status, setStatus] = useState(getInitialValue(tweet.id));\n\n\n  const getInitialFollovers = (follovers, status) => {\n    if (status) {\n      return follovers + 1;\n    } else return follovers;\n  };\n\n\n\n  const [followers, setFollowers] = useState(\n     getInitialFollovers(tweet.followers, status)\n  );\n\n\n \n\n\n  const handleChange = () => {\n    setStatus(!status);\n\n    if (!status) {\n      setFollowers(prevstate => prevstate + 1);\n    } else {\n      setFollowers(prevstate => prevstate - 1);\n    }\n\n    const arrayOfActiveFallowers = JSON.parse(localStorage.getItem('followers')) && [];\n\n    const  filteredFollow = (arrayOfActiveFallowers.includes(tweet.id)) ? arrayOfActiveFallowers.filter(item => item !== tweet.id) : [...arrayOfActiveFallowers, tweet.id]     \n       \n    localStorage.setItem(`followers`, JSON.stringify(filteredFollow));\n\n\n  };\n  return (\n    <UserLi>\n      <Logos src={logo} alt=\"logo\" />\n      <Picture src={picture} alt=\"picture_question\" />\n      <Line />\n      <Avatar src={tweet.avatar} alt=\"avatar\" />\n      <Tweets>{tweet.tweets} tweets</Tweets>\n      <FollowersContainer>{followers.toLocaleString('en-US', { maximumFractionDigits: 0 })} Followers</FollowersContainer>\n\n      <BtnContainer>\n        {!status && (\n          <BtnFalse type=\"button\" onClick={handleChange}>\n            follow\n          </BtnFalse>\n        )}\n\n        {status && (\n          <BtnTrue type=\"button\" onClick={handleChange}>\n            following\n          </BtnTrue>\n        )}\n      </BtnContainer>\n    </UserLi>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { LoadMore, Card, BackBtn } from 'components/Tweets.styled';\nimport axios from 'axios';\nimport { TweetCard } from 'components/TweetCard';\nimport { useLocation } from 'react-router-dom';\n\n\nexport const Users = () => {\n  const [tweets, setTweets] = useState([]);\n  const [buttonVisial, setButtonVisial] = useState(false);\n  const [limit, setLimit] = useState(3);\n\n  const location = useLocation();\n  const backToHome = location.state?.from ?? '/';\n\n  async function getTweets(limit) {\n    try {\n      const response = await axios.get(\n        ` https://6446ed517bb84f5a3e3532bf.mockapi.io/tweets?page=1&limit=${limit}`\n      );\n\n      setTweets(response.data);\n      setButtonVisial(true);\n      if (limit > 10) {\n        setButtonVisial(false);\n      }\n    } catch (error) {}\n  }\n\n  const handleLoadMore = () => {\n    setLimit(prevpage => prevpage + 3);\n  };\n\n  useEffect(() => {\n    getTweets(limit);\n  }, [limit]);\n\n  return (\n    <main>\n       {/* <BackLink to={backLinkHref}>Back to products</BackLink> */}\n      <BackBtn to={backToHome}>Back to home</BackBtn> \n\n      <Card>\n        {tweets.map(tweet => (\n          <TweetCard key={tweet.id} tweet={tweet} />\n        ))}\n      </Card>\n\n      {buttonVisial && tweets.length > 0 && (\n        <LoadMore width=\"300px\" onClick={handleLoadMore}>\n          Load more\n        </LoadMore>\n      )}\n    </main>\n  );\n};\n\nexport default Users;\n"],"names":["Logos","styled","UserLi","Link","Picture","Line","Avatar","Tweets","FollowersContainer","Card","BtnContainer","BtnFalse","BtnTrue","LoadMore","BackBtn","NavLink","TweetCard","tweet","useState","id","arrayOfActiveFallowers","JSON","parse","localStorage","getItem","includes","getInitialValue","status","setStatus","follovers","getInitialFollovers","followers","setFollowers","handleChange","prevstate","filteredFollow","filter","item","setItem","stringify","src","logo","alt","picture","avatar","tweets","toLocaleString","maximumFractionDigits","type","onClick","Users","setTweets","buttonVisial","setButtonVisial","limit","setLimit","backToHome","useLocation","state","from","axios","response","data","useEffect","getTweets","to","map","length","width","prevpage"],"sourceRoot":""}